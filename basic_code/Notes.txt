-----------------------------------------------------------
DATE 12-04-2024:
-----------------------------------------------------------
Operators:
0. Unary Operator:
============================================================
1. Binary Operator: it require 2 operand to perform an expression
//there are three types of binary operator
//1.1 Arithematic:
	[+  -  *  /  %]
//1.2 Relational Operator :
	It is use to contruct a consition and it return either true or false [> >= < <= == != ]
//1.3 Assignment operator:
	Operator	Expression	Value
------------------------------------------------------
	=		a=10		10
	+=		a+=20		30
	-=		a-=5		25
	*=		a+=10		250
	/=		a/=20		12
	%=		a%=10		2
------------------------------------------------------
================================================================
2. Ternary Operator(Conditional Operator):(?:):
Syntex: (condition?statementForTrue:statementForFalse);
=================================================================
3. Logical Operator:
3.1.AND operator (&&):when both condition are true then result is true.
3.2.OR operator (||): when any one consition is true the result is true.
3.3. NOT operator (!) : inverse the result.
===================================================================
4. Bitwise Operator:
bitwise operator allow us to perform an operation on bits(0,1).
<< left shift
<<< left shift and fill by 0

>> right shift
>>> right shift and fill by 0
| bitwise OR
& bitwise AND

==================================================
5. instanceOf Operator
	it is used to check that an object is member of class or not.
	Syntex : object instanceOf className
====================================================
	TYPECASTING anf PARSING

	Typecasting is used to convert a value from ine datatype to another datatype
	primitive to primitive and non-primitive to non-primitive both are typecasting
	primitive to non-primitive and non-primitive to primitive both are Parsing

	Difference between typecasting and Parsing
	types casting allow conversion from primitive to primitive or on-primitive to non-primitive
	while Parsing to converse form String(non-primitive) to primitive data type.

	Typecasting are two types
	1.implicit Typecasting:
		When programmer require to convert lower datatype value(in context of size of datatype) to Higher data type,
		this conversion done by compiler and called implicit typecasting
		byte a=10;
		short b=a;//byte to short
		int c=b;//short to int 
	2.explicit Typecasting:
		when a programmer need to convert higher size data type into lower size data type,
		then there is possibility of data loss and it required for following syntex:
			lowerSizeVariable=(lowerDataType)higherSizeVariable;

			int a=100;
			byte b;
			short c;
			float d;
			conversion
			b=(byte)a;
			c=(short)a;

		Every decimal value is considered as double 
		A float value is always end by f
		d=20.5;//error
		double e=20.5; //right
		d=20.5f;
		d=(float)20.5;


============================================================
Arithematic calculation and result

value1		value2		result
byte		byte		int
byte		short		int
short 		int 		int
int 		int 		int
int 		float		float
int 		double		double

byte a,b,c;
a=10;
b=20;
c=a+b;//error
c=(byte)(a+b);//right

=====================================================================
DATE 13-04-2024 Saturday:
===============================================================
Control Statements:
	control Statements are use to control flow of program 
	There r 3 types of control statements 
		1. conditional statements
		2. selective statements
		3. iterative statement(looping)

		=> 	supportive control statement
				break
				continue
				goto (not supported by java) : reserved keyword but not used or supported
				in java the task of goto can be implimented with the help of continue 
============================================================================
CONDITIONAL Statements:
	such type of statement execute a part of program accordingly condition.
	using if-else we can impliment conditional statement in java.
	if there only one condition 

	if(conditoin){
		statement1
		statement2
		.
		.
	}

	if there were 2 conditons:

	if(conditoin){
		statement1
		statement2
		.
		.
	}
	else{
		statement1
		statement2
		.
		.
	
	}

		if there more than 2 conditons:

	if(conditoin1){
		statement1
		statement2
		.
		.
	}
	else if(conditon2){
		statement1
		statement2
		.
		.
	
	}
	else if(conditon3){
		statement1
		statement2
		.
		.
	
	}
	.
	.
	.
	.
	else{
		statement1
		statement2
		.
		.
	
	}
----------------------------------------------------------
why after if, else is skipped
break is auto inbuilt in if so after if else does not execute.
---------------------------------------------------------
	NESTED if
	if an if control contains another if control staatement, then it is called nested if
	if(conditon){
		if(condition){
		statement
		}
		else{
			statement
		}
	}
	else{
		statement
	}

==========================================================================
java.lang.Math class:
Math.PI = 22/7
Math.pow(4,2) = 16
Math.sqrt(16) = 4 
Logicalsin
cos
tan
Math.abs(-20)=20
ciel()
floor()

==============================================================================
Selective Statements(switch):
		this type of statement execute a part of program according switch case.
		for Ex: Customer case calling system and choices in ATM banking
		Syntax:
		switch(choice)
		{
			case 1:
			{
			statement1
			statement2
			.
			.
			break;
			}
			case 2:
			{
			statement1
			statement2
			.
			.
			break;
			}
			.
			.
			.
			default:
			{
			statement1
			statement2
			.
			.
			
			}
		}
	Note:
		if no one case is matched then default block will executed
		break is required in each case otherwise after matching case all the case including default executed
	WAP to input 2 number and find one of the following operation according users choice
		1.Addition
		2.Subtraction
		3.Multiplication
		4.Division
	Write the progrsm to find one the following operation according to user choice
		1.Area of square
		2.Area of triangle
		3.Area of circle
		4.Area of rectangle
	check if a char is vowel or consonent using switch case.
	==================================================================
	foreach Loop: for(){}
		it is used in array to access all the elements of array without using index.
		it access start to end all elements
		Syntax :-
			for(variable declaration : array name){
				statement;
				.
				.
			}

===============================================
*
*	*
*	*	*
*	*	*	*
*	*	*	*	*
=================================================
OOPS:
	elements of OOPs:
	1. Class And object
	2. Inheritance
	3. Abstraction
	4. polymorphism
	5. Encapsulation

=======================================================
1. Class and objetc:
		class is blueprint or container of instance variables(attributes) and their behavior(methods).
        // Object creation of class refers memory allocation of all instance variable.
create a class circle and compute area ,circumference.

===============================================================
paramiterised constructor:
 a constructor take paramiter value, called paramitersed constructor or argument constructor on the basis of argument value,
 we can classified paramiterised constructor into 2 types:
    1. paramiterised constructor using callByValue
    2. paramiterised constructor using callByreference

1. paramiterised constructor using callByValue :
    A constructor that take primitive type values such as int,float,double,long,...etc. such as argument,
    it is called paramiterised constructor using callByValue.   
    as we know that implicit default constructor automatically created with every class but when a programmer creats a constructor
    then implicit default constructor it replaced by user created constructor.

2. paramiterised constructor using callByreference
    A constructor that takes object as argument , it is called paramiterised constructor using callByreference. 
    A paramiterised constructor using callByreference must be written with atleast one default or paramiterised constructorusing
    callByValue .

--------------------------------------------------------------------------------------------------------
WAP to create a class Dimension, if area=2(wh+hd+dw), then compute area of above shape using
1. default constructor
2. paramiterised constructor using callByValue
3. paramiterised constructor using callByreference

-----------------------------------------------------------------------------------------------
|  NOTE: If a class has more then one constructor then it is called constructor overloading.  |
-----------------------------------------------------------------------------------------------

WAP to create a class Factorial then compute Factorial of a number using:
1. default constructor
2. paramiterised constructor using callByValue
3. paramiterised constructor using callByreference

===============================================================================
Inheritance:
    Reusability of code is called Inheritance.
    Inheritance we can reuse properties of one class by another class .
    In Inheritance all the use classes can we classified into 2 types
        1. BaseClass/superClass/parentClass
        2. DerivedClass/childClass/subClass

Types of Inheritance:
   There r 5 types of Inheritance
   1. Single Inheritance
   2. Hirarchial Inheritance
   3. Multiple Inheritance (Does not support)
   4. MultiLevel Inheritance
   5. Hybrid Inheritance

1. Single Inheritance :
    THis type of Inheritance contains single BaseClass and single DerivedClass
    NOTE    1: extends keyword is used to inherit propertise of one class to another class 
               private variable and method never inherit.
               Inheritance is Bottum to Top programming approach.

2. Hirarchial Inheritance:
    In this we can inherit the properties of one class by 2 or more classes.

3. Multiple Inheritance (Does not support):
    In this we can inherit properties of 2 or more classs by a single class.
    Note : Java does not support multiple Inheritance due to constructor calling in Inheritance,
           but multiple Inheritance in java can be implimented with the help of Interface.

4. MultiLevel Inheritance:
    An Inheritance that have minimum 2 level called MultiLevel Inheritance

5. Hybrid Inheritance:
    The combination of multiple and MultiLevel Inheritance called Hybrid Inheritance


WAP to create class that series that have 3 attribute a,d,n it contains method input,
now create 2 subclasses AP Series and GP series, to print respective series;

WAP to create a class Shape that contains 2 child and input for input and now create 2 subclasses
rectangle and tringle to compute respective areas.
	
======================================
		 