
Static Modifiers :
    1.Static variable
    2.Static method
    3.Static block
    4.Static class


1. Static variable:
    we know that an instance vasriable allocates memory for each object seperatly,
    but a static variable allocate memory once and this memory can be access throught all object    
    static variable also called class variable.

2. Static Method:
    A static method does not need object creation for its calling it can be call directly using 
    the class name a static method can access only static variable and variable which is declare
    inside the static method, implicitly declared as static
    Calling a static variable and method:
        class_name.static_method_name
        class_name.static_variable_name

    WAP to create class Circle now input value of radius and compute area and circumference.
    in this program impliment all method as static

3. Static Block
    As we know that execution of program is started from main method, if a class contain static block,
    then static block is executed before main method.
    if a class contain more then one static block then all static blocks from top-to-bottom are executed
    before main method.
    static block is basically use to initialize static variable, so in sum other programming languages
    it is also called static constructor.
    Static block can access only static variable and a variable which is declare inside static block,
    implicitly declared as static.

    syntex:
        static{
            statements
            ...
            ..
            .
        }
example:

public class StaticBlock {
    static int a = 20;
    static {
        System.out.println("this is static Block1");
    }

    StaticBlock() {
        System.out.println("this is staticBlock Constructor");
    }

    static {
        System.out.println("this is static Block2");

    }

    static void staticMethod() {
        System.out.println("this is static method");
        System.out.println("A :" + a);
    }

    static {
        staticMethod();
        System.out.println("this is static block 3");
    }

    public static void main(String[] args) {
        System.out.println("Starting main() method");
        new StaticBlock().staticMethod();
    }
    static{
        System.out.println("This is static Block 4");
    }
}

4. Static Class:
    An outer class can not be static, Static class is always declared inside a class 
    A static class is also called Nested class, bcoz static class implicitly activated when the object of its outer class is created.

    Ex.1.   
        static class test{ //this class give compiletime error

        } 

    Ex.2:
        class company{ //Outer class

            static class Department{ //Static OR Nested class

            }
            class Employee{ //Inner class

            }
        }

=====================================================================================
Final Modifier:
    1.final variable
    2.final method
    3.final class

1. final variable:
        a final variable must be initialize at the time of declaration and once it is initialize, it can not be changed.
        final modifier is used to make variable constant.
        
        final int a;//error
        final int a=20;
        a=59;//error
        System.out.print(a);//output:20

2. final method:
        final method must be define at the time of declaration, and final method can not be override

        class ABC{
            void msg(){
                System.out.println("Class ABC");
            }
            final void show(){
                System.out.println("Class method show()");

            }

        }
        class XYZ{
            void msg(){
                System.out.println("Class XYZ");

            }
            void show(){ //Error
                System.out.println("Overridded method show and it can not be done");
                
            }
        }

3. final class:
        A final modifier prevents a class to be inherite,that means we cannot inherite a final class.
        class ABC{

        }
        class XYZ extends ABC{ //Error

        }
..............................................................................................................
|For same component we can have 2 or more modifier but abstract and final modifier have opposite properties, |
|So these modifier can not use for same component.                                                           |
``````````````````````````````````````````````````````````````````````````````````````````````````````````````

WAP to create a class Dimension to input 2 variable a,b amd method getData() and area()
    create 2 subClasses Rectangle and Triangle to compute Area of respective shape by overriding the Area() method