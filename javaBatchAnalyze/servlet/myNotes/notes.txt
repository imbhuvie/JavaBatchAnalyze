Servlet:
    1. HttpServlet
    2. GenericServlet
----------------------------------------------------------------------------------------------------
Session Handling :
    Session is just like a global variable that contains a value and this value can be access
    on any web page inside current application.
    Data which is stored using Session, it should be store in server memory.
    Session Handling only applicable on HttpServlet not for GenericServlet.
    There is a predefine class name aas javax.Servlet.http.HttpServlet.
----------------------------------------------------------------------------------------------------
 Object Creation for HttpSession :
    HttpSession session =request.getSession();
----------------------------------------------------------------------------------------------------
 Adding Data into Session :
    There are two method to add data in session:
        1. session.putValue("variable_name",<value>);//dpr
        2. session.setAttribute("variable_naem",<variable>);
 Example:
    session.putValue("user","Analyze");
    session.putValue("pswd","Lucknow");

                OR
    session.setAttribute("user","Analyze");
    session.setAttribute("pswd","Lucknow");
----------------------------------------------------------------------------------------------------
Reading Data from session
String user=session.getValue("user").toString();//Data will be in object so change to String
String pswd=session.getValue("pswd").toString();

                OR
String user=session.getAttribute("user").toString();//Data will be in object so change to string
String pswd=session.getAttribute("pswd").toString();

----------------------------------------------------------------------------------------------------
Updating data of session:
session.putValue("user",Analyze Infotech");
session.putValue("pswd","lko");

            OR

session.setAttribute("user",Analyze Infotech");
session.setAttribute("pswd","lko");

----------------------------------------------------------------------------------------------------
Delete data from session

session.putValue("user",null);
session.putValue("pswd",null);

            OR
session.setAttribute("user",null);
session.setAttribute("pswd",null);
----------------------------------------------------------------------------------------------------
To redirect another page:
    respond.sendRedirect("homepage?msg=password Updated successfully");
----------------------------------------------------------------------------------------------------
Cookie:
    cookie is a text information that stores on client side and this information can access anywhere in web application.
    There are 2 types of cookies :
    1. In Memory cookie: such type should store in browser memory and it is automatically deleted when browser is closed.
2. Persistent Cookie: such type Cookie should store for specific time, after this duration it is automatically deleted after this duration.
Note : Cookie only applicable for HttpServlet.
``````````````````````````````````````````````
creating Object of cookie:
        Cookie ck1=new Cookie("user","analyze");
        Cookie ck2=new Cookie("pswd","Lucknow");
How to make Persistent cookie:
Syntex: ck2.setMaxAge(<inSecond>);
        ck2.setMaxAge(24*30*60*60);//for 30 days
Add Cookie on client side:
        response.addCookie(ck1);
        response.addCookie(ck2);
    
How to get data from cookie;
    Cookie ck[]=request.getCookies();
    for(int i=0;i<ck.length;i++){
        out.println("Cookie Name :"+ck[i].getName);
        out.println("Cookie Name :"+ck[i].getValue);
    }
Updating value of cookie:
    ck1=new Cookie("user","Analyze Infotech");
    ck2=new Cookie("pswd","Analyze Lucknow");

Note:Using program we can not delete Cookie.
````````````````````````````````````````````
----------------------------------------------------------------------------------------------------
03052024

JSP (Java Server Page):
Note: JSP page always exist to WebPage.
    jsp is a server side scripting language
    every scripting language bases on its Tags, So jsp is also based on tags.
    A jsp file can have HTML,CSS,JavaScript,Java code.
    A jsp file has .jsp extension
    every jsp page converted in servet by jsp container.
    jspFile=>ServletFile.java=>ByteCode.class=>converion to machine code and execute

Advantage:
    1.A jsp file does not need structure of class an object.It works like scripting language(Server Side)
    2.A jsp file can have HTML code normally, it does not need of out.println().
    3.Execution of jsp page is faster then Servlet
    4.A jsp file also support implicit object for use full classes and interface.
    implicit object:
        Page page
        PrintWriter out
        ServletConfig config
        HttpServletRequest request
        HttpServletResponse response
        HttpSession session
        Cookie cookie
``````````````````````````````````````````````````````````````````````````````````
JSP Tags:
    There are five types of jsp tags:
        1.Directive tag: Directive tag used to import specific Class,Package or it is also used to inherit class.
            <%@page import="java.util.*"%>
            <%@page import="DB.*"%>

            <%@page include="header.jsp"%>
            <%@page include="index.html"%>
            <%@page include="header.jsp"%>
        2.Declarative Tag: It is used to declare variable and function which can access any where in webpage
            <%!
                String cname="Analyze";
                String city="Lucknow";
                int sum=0
                void sum(int n){
                    for(int i=0;i<=n;i++){
                        sum=sum+i;
                    }
                }
            %>
        3.Scriptlet Tag: it most used tag in jsp and it can have any valid java code or statement.
            <%
                int a=10;
                int b=20;
                int c=a+b;
                System.out.println("Addition :"+c);
            %>
        4.Expression Tag: it used to execute single java statement and it also print its output.
            <%= cname %>
                OR
            <% out.println(cname); %>
        5.Comment Tag: 
        <%--  --%>

    UTF-8: universal true font